plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'net.draimcido'
version = '1.1.1'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = "dmulloy2-repo"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "clip-repo"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "NBT-API"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "sk89q-repo"
        url = "https://maven.enginehub.org/repo/"
    }
    maven {
        name = "jitpack-repo"
        url = "https://jitpack.io"
    }
    maven {
        name = "Lumine Releases"
        url = "https://mvn.lumine.io/repository/maven-public"
    }
}

dependencies {
    compileOnly fileTree(dir:'libs',includes:['*.jar'])
    compileOnly('io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT')
    compileOnly('com.github.Archy-X:AureliumSkills:Beta1.3.6')
    compileOnly('redis.clients:jedis:4.2.3')
    compileOnly('me.clip:placeholderapi:2.11.1')
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.7')
    compileOnly('io.lumine:Mythic-Dist:5.0.3-SNAPSHOT')
    compileOnly('dev.dejvokep:boosted-yaml:1.3')
    compileOnly('com.willfp:EcoSkills:1.72.0')
    compileOnly('com.willfp:eco:6.38.3')
    compileOnly('com.github.Zrips:Jobs:4.17.2')
    compileOnly('com.github.LoneDev6:api-itemsadder:3.2.3c')
    implementation('net.kyori:adventure-api:4.11.0')
    implementation('net.kyori:adventure-platform-bukkit:4.1.2')
    implementation('net.kyori:adventure-text-minimessage:4.11.0')
    implementation('net.kyori:adventure-text-serializer-legacy:4.11.0')
    implementation('de.tr7zw:item-nbt-api:2.10.0')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

shadowJar {
    relocate 'de.tr7zw', 'net.draimcido.draimfishing.libs'
    relocate 'net.kyori', 'net.draimcido.draimfishing.libs'
}
